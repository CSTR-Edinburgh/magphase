#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
@author: Felipe Espic

DESCRIPTION:
This script extracts low-dimensional acoustic features from a batch of wav files intended for using with the Merlin toolkit.
It runs the extraction in parallel mode, using all the cores available in the system.

The acoustic features extracted and used by Merlin are:
- '<file>.mag'  : Mel-scaled Log-Mag (dim=nbins_mel,   usually 60).
- '<file>.real' : Mel-scaled real    (dim=nbins_phase, usually 45).
- '<file>.imag' : Mel-scaled imag    (dim=nbins_phase, usually 45).
- '<file>.lf0'  : Log-F0 (dim=1).

Also, this script extracts the additional files:
- '<file>.est'  : File generated by REAPER containing epoch locations and voi/unvoi decisions (remove them if wanted).
- '<file>.shift': File that contains the shifts (hop-sizes) for each extracted frame (variable frame rate).
                  It is used to modify the label files in Merlin. Se .... for more information.

INSTRUCTIONS:
This demo should work out of the box. Just run it by typing: python <script name>
If wanted, you can modify the input options (directories, input files, etc.) See the main function below for details.
"""

import sys, os
curr_dir = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.realpath(curr_dir + '/../../src'))
import libutils as lu
import magphase as mp


def feat_extraction(in_wav_dir, file_name_token, out_feats_dir):

    # Display:
    print("\nAnalysing file: " + file_name_token + '.wav............................')

    # File setup:
    wav_file = os.path.join(in_wav_dir, file_name_token + '.wav')
    mp.analysis_for_acoustic_modelling(wav_file, out_feats_dir)
    return

if __name__ == '__main__':  
    
    # INPUT:==============================================================================
    files_scp     = '../demos/data_48k/file_id.scp' # List of file names (tokens). Format used by Merlin.
    in_wav_dir    = '../demos/data_48k/wavs_nat'    # Directory with the wavfiles to extract the features from.
    out_feats_dir = '../demos/data_48k/params_nat'  # Output directory that will contain the extracted features.

    b_multiproc   = True
    # FILES SETUP:========================================================================
    lu.mkdir(out_feats_dir)
    l_file_tokns = lu.read_text_file2(files_scp, dtype='string', comments='#').tolist()

    # MULTIPROCESSING EXTRACTION:==========================================================
    if b_multiproc:
        lu.run_multithreaded(feat_extraction, in_wav_dir, l_file_tokns, out_feats_dir)
    else:
        for file_name_token in l_file_tokns:
            feat_extraction(in_wav_dir, file_name_token, out_feats_dir)

    print('Done!')
        
